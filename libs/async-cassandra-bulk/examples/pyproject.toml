[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "async-cassandra-bulk-operations"
version = "0.1.0"
description = "Token-aware bulk operations example for async-cassandra"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "Apache-2.0"}
authors = [
    {name = "AxonOps", email = "info@axonops.com"},
]
dependencies = [
    # For development, install async-cassandra from parent directory:
    # pip install -e ../..
    # For production, use: "async-cassandra>=0.2.0",
    "pyiceberg[pyarrow]>=0.8.0",
    "pyarrow>=18.0.0",
    "pandas>=2.0.0",
    "rich>=13.0.0",  # For nice progress bars
    "click>=8.0.0",  # For CLI
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "black>=24.0.0",
    "ruff>=0.8.0",
    "mypy>=1.13.0",
]

[project.scripts]
bulk-ops = "bulk_operations.cli:main"

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--asyncio-mode=auto",
    "--cov=bulk_operations",
    "--cov-report=html",
    "--cov-report=term-missing",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests that don't require Cassandra",
    "integration: Integration tests that require a running Cassandra cluster",
    "slow: Tests that take a long time to run",
]

[tool.black]
line-length = 100
target-version = ["py312"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_first_party = ["async_cassandra"]

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    # "I",    # isort - disabled since we use isort separately
    "B",    # flake8-bugbear
    "C90",  # mccabe complexity
    "UP",   # pyupgrade
    "SIM",  # flake8-simplify
]
ignore = ["E501"]  # Line too long - handled by black

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true
